import { Controller } from '@nestjs/common';
import {
  Ctx,
  InjectBot,
  On,
  Start,
  Update,
  Action,
  Hears,
} from 'nestjs-telegraf';
import { Context } from './interfaces/context.interface';
import { Telegraf } from 'telegraf';
import { Message } from 'telegraf/typings/core/types/typegram';

import { UserService } from 'src/user/user.service';

import * as buttons from './markup/buttons';
import {
  Actions,
  QuestAnswers,
  Wholesale_Cooperation,
} from './constant/action';

@Update()
export class BotUpdate {
  constructor(
    @InjectBot('soakcare_bot') private readonly bot: Telegraf<Context>,
    private readonly userService: UserService,
  ) {}

  @Start()
  async onStart(@Ctx() ctx: Context) {
    try {
      const isUser = await this.userService.findUserByChatId(ctx.chat.id);
      if (isUser) {
        await ctx.replyWithHTML(
          '–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç <b>–ü–∞—Ñ—Ñ–∏</b>.\n–†–∞–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—Éüòå\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à—É—é —Ç–æ—á–∫—É –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤ –æ—Ç SOAK, –∞ —Ç–∞–∫–∂–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞–º–∏ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏',
          buttons.MAIN_MENU(),
        );
        return;
      }
      await ctx.scene.enter('login');
    } catch (error) {
      console.log(error);
    }
  }

  @On('photo')
  async onPhoto(@Ctx() ctx: Context) {
    console.log((ctx.message as Message.PhotoMessage).photo);
  }

  @On('video')
  async onVideo(@Ctx() ctx: Context) {
    console.log((ctx.message as Message.VideoMessage).video);
  }

  // ================= Buttons Level 1 =======================
  @Action(Actions.QA)
  async qa(@Ctx() ctx: Context) {
    ctx.editMessageText(
      '–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
      buttons.QA(),
    );
  }

  @Action(Actions.BREAKDOWN)
  async breakdown(@Ctx() ctx: Context) {
    ctx.editMessageText('–ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–∞–±–æ—Ç–æ–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞', buttons.BREAKDOWN());
  }

  @Action(Actions.WHOLESALE_AND_COOPERATION)
  async wholesale(@Ctx() ctx: Context) {
    ctx.editMessageText(
      '–û–ø—Ç –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ',
      buttons.WHOLESALE_AND_COOPERATION(),
    );
  }

  @Action(Actions.CONNECT_TO_HR)
  async hr(@Ctx() ctx: Context) {
    ctx.editMessageText(
      '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –∫–∞–∫—É—é –≤–∞–∫–∞–Ω—Å–∏—é –æ—Ç–∫–ª–∏–∫–∞–µ—Ç–µ—Å—å –¥–∞–Ω–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É @hr_anna_soak_pods1',
      buttons.BACK(),
    );
  }

  @Action(Actions.CONNECT_TO_MARKETING)
  async marketing(@Ctx() ctx: Context) {
    ctx.editMessageText(
      '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É @las_soak',
      buttons.BACK(),
    );
  }

  // ================= Buttons Level 2 =======================
  // QA
  @Action(QuestAnswers.SHOP_PRICE)
  async prices(@Ctx() ctx: Context) {
    ctx.editMessageText(
      '–í—Å–µ —Ü–µ–Ω—ã —è–≤–ª—è—é—Ç—Å—è <b>—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–π —Ä–æ–∑–Ω–∏—á–Ω–æ–π —Ü–µ–Ω–æ–π</b>\n–¶–µ–Ω–∞ –º–æ–∂–µ—Ç <b>–º–µ–Ω—è—Ç—å—Å—è</b> –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ä–µ–≥–∏–æ–Ω–∞\n\n- SOAK X 1500 —Ç—è–≥ - <b>650—Ä</b>\n- SOAK ZERO X 1500 - <b>650—Ä</b>\n- SOAK S 2500 - <b>800—Ä</b>\n- SOAK M 4000 - <b>1100—Ä</b>\n- SOAK L –∂–∏–¥–∫–æ—Å—Ç—å - <b>750—Ä</b>\n- SOAK Q 1500 —Ç—è–≥ - <b>1000—Ä</b>.\n- Q –∫–∞—Ä—Ç—Ä–∏–¥–∂ –≤ —É–ø–∞–∫–æ–≤–∫–µ 1 —à—Ç - <b>450—Ä</b>.\n- Q –∫–∞—Ä—Ç—Ä–∏–¥–∂ –≤ —É–ø–∞–∫–æ–≤–∫–µ 2 —à—Ç - <b>800—Ä.</b>',
      {
        parse_mode: 'HTML',
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: Actions.BACK,
                callback_data: Actions.BACK + 'qa_lvl_1',
              },
            ],
          ],
        },
      },
    );
  }
  @Action(QuestAnswers.SHOP_LOCATION)
  async locations(@Ctx() ctx: Context) {
    ctx.editMessageText(
      '–ü—Ä–æ–π–¥–∏—Ç–µ –ø–æ –Ω–∞—à–µ–º—É —Ö–µ—à—Ç–µ–≥—É –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≥–æ—Ä–æ–¥, —É–∑–Ω–∞—Ç—å –ø–æ –Ω–∞–ª–∏—á–∏—é —Ç–æ–≤–∞—Ä–∞ –∑–≤–æ–Ω–∏—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ —Å–∞–º –≤ –º–∞–≥–∞–∑–∏–Ω\n\n<b>#SOAK–í–¢–í–û–ï–ú–ì–û–†–û–î–ï</b>',
      {
        parse_mode: 'HTML',
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: Actions.BACK,
                callback_data: Actions.BACK + 'qa_lvl_1',
              },
            ],
          ],
        },
      },
    );
  }
  @Action(QuestAnswers.SHOP_LOCATION_NONE)
  async locations_none(@Ctx() ctx: Context) {
    ctx.editMessageText('C–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≥–æ—Ä–æ–¥', {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: Actions.BACK,
              callback_data: Actions.BACK + 'qa_lvl_1',
            },
          ],
        ],
      },
    });
  }
  @Action(QuestAnswers.SHOP_ORIGINAL)
  async original(@Ctx() ctx: Context) {
    ctx.editMessageText(
      '–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –Ω–∞ —É–ø–∞–∫–æ–≤–∫–µ –µ—Å—Ç—å Qr\n\n–ù–∞–≤–æ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É, –≤–∞—Å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å–∞–π—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏, <b>–Ω–∞–∂–∏–º–∞–µ—Ç–µ ¬´–ü–û–î–¢–í–ï–†–î–ò–¢–¨ –ó–ê–ü–†–û–°¬ª</b> –∏ —á–∏—Ç–∞–µ—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –î–≤–∞–∂–¥—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è.',
      {
        parse_mode: 'HTML',
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: Actions.BACK,
                callback_data: Actions.BACK + 'qa_lvl_1',
              },
            ],
          ],
        },
      },
    );
  }
  @Action(QuestAnswers.SHOP_NAMING)
  async naming(@Ctx() ctx: Context) {
    ctx.editMessageText(
      '–ù–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –≤—Å—è –∂–∏–¥–∫–æ—Å—Ç—å –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è L, –¥–æ —ç—Ç–æ–≥–æ –æ–Ω–∞ –Ω–∞–∑—ã–≤–∞–ª–∞—Å—å LX, LS.\n\n(LX - –≤–∫—É—Å—ã –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è –∏–∑ –ª–∏–Ω–µ–π–∫–∏ –• –Ω–∞ 1500 —Ç—è–≥.\nLS ‚Äì –≤–∫—É—Å—ã –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è –∏–∑ –ª–∏–Ω–µ–π–∫–∏ S –Ω–∞ 2500 —Ç—è–≥)',
      {
        parse_mode: 'HTML',
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: Actions.BACK,
                callback_data: Actions.BACK + 'qa_lvl_1',
              },
            ],
          ],
        },
      },
    );
  }

  // Breakdown
  @Action('product')
  async product(@Ctx() ctx: Context) {
    ctx.editMessageText(
      '–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É. –ò –ø–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –≥–¥–µ –ø–æ–∫—É–ø–∞–ª–∏:\n\n- –ì–æ—Ä–æ–¥\n- –ê–¥—Ä–µ—Å –∞–≥–∞–∑–∏–Ω–∞\n- –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞\n- –í–∫—É—Å\n- –°–∫—Ä–∏–Ω –æ–ø–ª–∞—Ç—ã (—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —á–µ–∫)  —Ñ–æ—Ç–æ –±—É–º–∞–∂–Ω–æ–≥–æ —á–µ–∫–∞\n- –í–∏–¥–µ–æ –∏–ª–∏ —Ñ–æ—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã',
      {
        parse_mode: 'HTML',
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: Actions.BACK,
                callback_data: Actions.BACK + 'breakdown_lvl_1',
              },
            ],
          ],
        },
      },
    );
  }

  // Wholesale
  @Action(Wholesale_Cooperation.VOLUME_WHOLESALE)
  @Action(Wholesale_Cooperation.VIEW_PRICE)
  @Action(Wholesale_Cooperation.VIEW_CONTACT)
  async volume(@Ctx() ctx: Context) {
    ctx.editMessageText('–°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º', {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: Actions.BACK,
              callback_data: Actions.BACK + 'wholesale_lvl_1',
            },
          ],
        ],
      },
    });
  }

  @Action([
    Actions.BACK + 'qa_lvl_1',
    Actions.BACK + 'breakdown_lvl_1',
    Actions.BACK + 'wholesale_lvl_1',
    Actions.BACK + '_lvl_1',
    Actions.BACK + '_lvl_2',
    Actions.BACK + '_lvl_3',
  ])
  async onBack(@Ctx() ctx: any) {
    const cb: string = ctx.callbackQuery.data;

    if (cb.includes('wholesale')) {
      ctx.editMessageText(
        '–û–ø—Ç –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ ',
        buttons.WHOLESALE_AND_COOPERATION(),
      );
      return;
    }

    if (cb.includes('breakdown')) {
      ctx.editMessageText(
        '–ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–∞–±–æ—Ç–æ–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ',
        buttons.BREAKDOWN(),
      );
      return;
    }

    if (cb.includes('qa')) {
      ctx.editMessageText(
        '–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã ',
        buttons.QA(),
      );
      return;
    }

    if (cb.includes('1')) {
      ctx.editMessageText(
        '–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ü–∞—Ñ—Ñ–∏.\n–†–∞–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—Éüòå\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à—É—é —Ç–æ—á–∫—É –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–æ–≤ –æ—Ç SOAK, –∞ —Ç–∞–∫–∂–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞–º–∏ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏',
        buttons.MAIN_MENU(),
      );
      return;
    }
  }
}
